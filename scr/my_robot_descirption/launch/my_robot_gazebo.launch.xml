<launch>
    <let name = "urdf_path" value = "$(find-pkg-share my_robot_descirption)/urdf/my_car.urdf.xacro"/>

    <let name = "robot_rviz_path" value = "$(find-pkg-share my_robot_descirption)/config/urdf_config.rviz"/>

    <let name = "gazebo_config_path" value = "$(find-pkg-share my_robot_descirption)/config/gazebo_bridge.yaml"/>

    <node pkg = "robot_state_publisher" exec = "robot_state_publisher">
        <param name = "robot_description" value = "$(command 'xacro $(var urdf_path)')"/>
    </node>

    <!-- <node
        pkg="rplidar_ros"
        exec="rplidar_composition"
        output="screen">
        
        <param name="serial_port" value="/dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.3:1.0-port0"/>
        <param name="frame_id" value="laser_frame"/>
        <param name="angle_compensate" value="true"/>
        <param name="scan_mode" value="Standard"/>
        
    </node> -->


    <include file = "$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py">
        <!-- <arg name = "gz_args" value = "$(find-pkg-share small_bot)/worlds/house_world.sdf"/> -->
        <!-- <arg name = "gz_args" value = "$(find-pkg-share my_robot_descirption)/world/test_world.sdf -r"/> -->
        <arg name = "gz_args" value = "empty.sdf -r"/>
    </include>

    <node pkg = "ros_gz_sim" exec = "create" args = "-topic robot_description"/>

    <node pkg = "ros_gz_bridge" exec = "parameter_bridge">
        <param name = "config_file" value = "$(var gazebo_config_path)"/>
    </node>

    <node pkg = "rviz2" exec = "rviz2" output = "screen"
           args = "-d $(var robot_rviz_path)"/>
</launch>